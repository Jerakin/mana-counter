local monarch = require "monarch.monarch"
local constants = require "main.app.constants"



local _DEFAULT = {"White","Blue", "Black", "Red", "Green"}


local COUNTERS = {}
local INCREMENT_10 = nil
local CURRENT_BUTTON = nil
local TOTAL = {}
local TOTAL_ANIM = {}

local SCENE_DATA = {}
SCENE_DATA.node_data = {}
SCENE_DATA.input_amount = 1
SCENE_DATA.active = {}

local function create_counter(options)
    local data = {}
    local counter = gui.clone_tree(SCENE_DATA.template)
    local b_size = vmath.vector3(options.size.x, gui.get_height()/2, 0)
    gui.set_parent(counter["template_counter/box"], SCENE_DATA.root)
    gui.set_visible(counter["template_counter/box"], true)
    gui.set_color(counter["template_counter/box"], options.color)
    gui.set_size(counter["template_counter/box"], options.size)
    gui.set_position(counter["template_counter/box"], options.position)
    
    gui.set_size(counter["template_counter/add"], b_size)
    gui.set_size(counter["template_counter/remove"], b_size)
    gui.set_visible(counter["template_counter/add"], false)
    gui.set_visible(counter["template_counter/remove"], false)
    
    gui.play_flipbook(counter["template_counter/symbol"], options.texture)
    data.add = counter["template_counter/add"]
    data.remove = counter["template_counter/remove"]
    data.total = counter["template_counter/text_total"]
    data.text = counter["template_counter/text"]
    return data
end

local function setup()
    local width = gui.get_width() / #_DEFAULT
    for i in pairs(_DEFAULT) do
        local name = _DEFAULT[i]
        SCENE_DATA.node_data[name] = {}
        local data = constants[name]
        local options = {
            name=name,
            color=data.color, 
            texture=data.texture, 
            size = vmath.vector3(width, 640, 0),
            position = vmath.vector3((width*i)+width*0.5, 0, 0),
        }
        local counter = create_counter(options)
        SCENE_DATA.node_data[name].nodes = counter
        SCENE_DATA.node_data[name].input = {total=0}
    end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    SCENE_DATA.template = gui.get_node("template_counter/box")
    SCENE_DATA.root = gui.get_node("template_counter/box")
    setup()
    gui.set_visible(SCENE_DATA.template, false)
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
end

local function add_operator(num)
    if num > 0 then
        return "+" .. tostring(num)
    end
    return num
end

local function increment(i)
    local n = gui.get_text(SCENE_DATA.active.text)
    local add = (SCENE_DATA.active.mult * i)
    local new_n = tonumber(n) + add
    SCENE_DATA.node_data[SCENE_DATA.active.name].input.total = SCENE_DATA.node_data[SCENE_DATA.active.name].input.total + add
    
    gui.set_text(SCENE_DATA.active.text, new_n)
    gui.set_text(SCENE_DATA.active.total, add_operator(SCENE_DATA.node_data[SCENE_DATA.active.name].input.total))
    if SCENE_DATA.node_data[SCENE_DATA.active.name].input.total == 0 then
        gui.set_visible(SCENE_DATA.active.total, false)
    else
        gui.set_visible(SCENE_DATA.active.total, true)
    end
    if new_n == 0 then
        gui.set_visible(SCENE_DATA.active.text, false)
    else
        gui.set_visible(SCENE_DATA.active.text, true)
    end
end

local function toggle_button(node, visible)
    gui.set_visible(node, visible)
end

function on_input(self, action_id, action)
    if action_id == hash("touch") then
        if action.pressed then
            SCENE_DATA.repeated = false
            SCENE_DATA.active = {}
        end
            
        for name in pairs(SCENE_DATA.node_data) do
            local node_data = SCENE_DATA.node_data[name]
            if action.pressed then
                if gui.pick_node(node_data.nodes.add, action.x, action.y) then
                    SCENE_DATA.active.button = node_data.nodes.add
                    SCENE_DATA.active.text = node_data.nodes.text
                    SCENE_DATA.active.total = node_data.nodes.total
                    SCENE_DATA.active.name = name
                    SCENE_DATA.active.mult = 1
                elseif gui.pick_node(node_data.nodes.remove, action.x, action.y) then
                    SCENE_DATA.active.button = node_data.nodes.remove
                    SCENE_DATA.active.total = node_data.nodes.total
                    SCENE_DATA.active.text = node_data.nodes.text
                    SCENE_DATA.active.name = name
                    SCENE_DATA.active.mult = -1
                end
                if SCENE_DATA.active.button then
                    if SCENE_DATA.node_data[SCENE_DATA.active.name].input.timer then
                        timer.cancel(SCENE_DATA.node_data[SCENE_DATA.active.name].input.timer)
                    end
                    gui.set_visible(SCENE_DATA.active.button, true)
                end
            end
        end
        if not action.pressed and action.repeated then
            SCENE_DATA.repeated = true
            increment(10)
        elseif action.released and SCENE_DATA.active.button then
            if not SCENE_DATA.repeated then
                increment(1)
            end
            gui.set_visible(SCENE_DATA.active.button, false)
            local name = SCENE_DATA.active.name
            SCENE_DATA.node_data[name].input.timer = timer.delay(2, false, function() 
                gui.set_visible(SCENE_DATA.node_data[name].nodes.total, false)
                SCENE_DATA.node_data[name].input.total = 0
                SCENE_DATA.node_data[name].input.timer = nil
            end)
        end
    end
end

function on_reload(self)
end
